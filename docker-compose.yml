version: '3.6'

services:

### API #########################################################
    api-php:
        build:
            context: ./service/api/docker
        volumes:
            - ./service/api:/app
            - ./service/api/nginx-app.conf:/etc/nginx/conf.d/nginx-app.conf
            - ./service/api/php.ini:/opt/php72/lib/php.ini
            - ./service/api/wp-content:/app/wordpress/wp-content
            - ./service-account.json:/srv/service-account.json:ro
            - ./data/lighthouse-server:/app/wordpress/wp-content/uploads/lighthouse
            - ./data/phpcs-server:/app/wordpress/wp-content/uploads/phpcs
        depends_on:
            - api-mysql
            - api-redis
            - mongo
        ports:
            - 80:8080
        environment:
            API_ADMIN_EMAIL: ${API_ADMIN_EMAIL}
            API_ADMIN_PASSWORD: ${API_ADMIN_PASSWORD}
            API_ADMIN_USER: ${API_ADMIN_USER}
            API_BLOG_DESCRIPTION: ${API_BLOG_DESCRIPTION}
            API_BLOG_NAME: ${API_BLOG_NAME}
            API_CACHE_DEBUG: ${API_CACHE_DEBUG}
            API_CACHE_KEY_SALT: ${API_CACHE_KEY_SALT}
            API_CACHE_TTL: ${API_CACHE_TTL}
            API_DB_HOST: ${API_DB_HOST}
            API_DB_NAME: ${API_DB_NAME}
            API_DB_PASSWORD: ${API_DB_PASSWORD}
            API_DB_ROOT_PASSWORD: ${API_DB_ROOT_PASSWORD}
            API_DB_USER: ${API_DB_USER}
            API_HTTP_HOST: ${API_HTTP_HOST}
            API_KEY: ${API_KEY}
            API_MESSAGE_PROVIDER: ${API_MESSAGE_PROVIDER}
            API_REDIS_AUTH: ${API_REDIS_AUTH}
            API_REDIS_DATABASE: ${API_REDIS_DATABASE}
            API_REDIS_HOST: ${API_REDIS_HOST}
            API_REDIS_PORT: ${API_REDIS_PORT}
            API_SECRET: ${API_SECRET}
            API_THEME: ${API_THEME}
            API_UPLOAD_HANDLER: ${API_UPLOAD_HANDLER}
            AWS_API_KEY: ${AWS_API_KEY}
            AWS_API_SECRET: ${AWS_API_SECRET}
            AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
            AWS_S3_REGION: ${AWS_S3_REGION}
            AWS_S3_VERSION: ${AWS_S3_VERSION}
            AWS_SQS_QUEUE_LH: ${AWS_SQS_QUEUE_LH}
            AWS_SQS_QUEUE_PHPCS: ${AWS_SQS_QUEUE_PHPCS}
            AWS_SQS_REGION: ${AWS_SQS_REGION}
            AWS_SQS_VERSION: ${AWS_SQS_VERSION}
            DOCUMENT_ROOT: /app/wordpress
            GCF_QUEUE_LH: ${GCF_QUEUE_LH}
            GCF_QUEUE_PHPCS: ${GCF_QUEUE_PHPCS}
            GCP_PROJECT: ${GCP_PROJECT}
            GOOGLE_APPLICATION_CREDENTIALS: /srv/service-account.json
            MONGO_DATABASE_NAME: ${MONGO_DATABASE_NAME}
            MONGO_DATABASE_PASSWORD: ${MONGO_DATABASE_PASSWORD}
            MONGO_DATABASE_USERNAME: ${MONGO_DATABASE_USERNAME}
            MONGO_QUEUE_LH: ${MONGO_QUEUE_LH}
            MONGO_QUEUE_PHPCS: ${MONGO_QUEUE_PHPCS}

    api-mysql:
        image: mariadb:10.3
        ports:
            - 3306:3306
        volumes:
            - ./data/api/mysql:/var/lib/mysql
            - ./service/api/wptests.sql:/docker-entrypoint-initdb.d/wptests.sql
        environment:
            MYSQL_DATABASE: ${API_DB_NAME}
            MYSQL_PASSWORD: ${API_DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${API_DB_ROOT_PASSWORD}
            MYSQL_USER: ${API_DB_USER}

    api-redis:
        image: redis:3.2-alpine
        ports:
            - 6379:6379
        volumes:
            - ./data/api/redis:/data

### MongoDB #####################################################
    mongo:
        image: mongo
        restart: always
        volumes:
            - ./data/mongo:/data/db
        ports:
            - 27017:27017
        environment:
            MONGO_INITDB_DATABASE: ${MONGO_DATABASE_NAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DATABASE_PASSWORD}
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_DATABASE_USERNAME}

### Lighthouse Server ###########################################
    lighthouse-server:
        image: ${GKE_LH_IMAGE}:latest
        volumes:
            - ./data/lighthouse-server:/srv/data
            - ./service-account.json:/srv/service-account.json:ro
        depends_on:
            - mongo
        environment:
            API_AUTH_URL: ${API_AUTH_URL}
            API_HTTP_HOST: ${API_HTTP_HOST}
            API_KEY: ${API_KEY}
            API_PROTOCOL: ${API_PROTOCOL}
            API_SECRET: ${API_SECRET}
            API_VERSION: ${API_VERSION}
            AWS_API_KEY: ${AWS_API_KEY}
            AWS_API_SECRET: ${AWS_API_SECRET}
            AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
            AWS_S3_REGION: ${AWS_S3_REGION}
            AWS_S3_VERSION: ${AWS_S3_VERSION}
            AWS_SQS_QUEUE_LH: ${AWS_SQS_QUEUE_LH}
            AWS_SQS_REGION: ${AWS_SQS_REGION}
            AWS_SQS_VERSION: ${AWS_SQS_VERSION}
            GCF_QUEUE_LH: ${GCF_QUEUE_LH}
            GCP_PROJECT: ${GCP_PROJECT}
            GCS_BUCKET_NAME: ${GCS_BUCKET_NAME}
            GOOGLE_APPLICATION_CREDENTIALS: /srv/service-account.json
            LH_CONCURRENT_AUDITS: ${LH_CONCURRENT_AUDITS}
            LH_MESSAGE_PROVIDER: ${LH_MESSAGE_PROVIDER}
            LH_STORAGE_PROVIDER: ${LH_STORAGE_PROVIDER}
            LH_TEMP_FOLDER: ${LH_TEMP_FOLDER}
            MONGO_DATABASE_NAME: ${MONGO_DATABASE_NAME}
            MONGO_DATABASE_PASSWORD: ${MONGO_DATABASE_PASSWORD}
            MONGO_DATABASE_USERNAME: ${MONGO_DATABASE_USERNAME}
            MONGO_QUEUE_LH: ${MONGO_QUEUE_LH}
        network_mode: host

### PHPCS Server ################################################
    phpcs-server:
        image: ${GKE_PHPCS_IMAGE}:latest
        volumes:
            - ./data/phpcs-server:/srv/data
            - ./service-account.json:/srv/service-account.json:ro
        depends_on:
            - mongo
        environment:
            API_AUTH_URL: ${API_AUTH_URL}
            API_HTTP_HOST: ${API_HTTP_HOST}
            API_KEY: ${API_KEY}
            API_PROTOCOL: ${API_PROTOCOL}
            API_SECRET: ${API_SECRET}
            API_VERSION: ${API_VERSION}
            AWS_API_KEY: ${AWS_API_KEY}
            AWS_API_SECRET: ${AWS_API_SECRET}
            AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
            AWS_S3_REGION: ${AWS_S3_REGION}
            AWS_S3_VERSION: ${AWS_S3_VERSION}
            AWS_SQS_QUEUE_PHPCS: ${AWS_SQS_QUEUE_PHPCS}
            AWS_SQS_REGION: ${AWS_SQS_REGION}
            AWS_SQS_VERSION: ${AWS_SQS_VERSION}
            GCF_QUEUE_PHPCS: ${GCF_QUEUE_PHPCS}
            GCP_PROJECT: ${GCP_PROJECT}
            GCS_BUCKET_NAME: ${GCS_BUCKET_NAME}
            GOOGLE_APPLICATION_CREDENTIALS: /srv/service-account.json
            MONGO_DATABASE_NAME: ${MONGO_DATABASE_NAME}
            MONGO_DATABASE_PASSWORD: ${MONGO_DATABASE_PASSWORD}
            MONGO_DATABASE_USERNAME: ${MONGO_DATABASE_USERNAME}
            MONGO_QUEUE_PHPCS: ${MONGO_QUEUE_PHPCS}
            PHPCS_CONCURRENT_AUDITS: ${PHPCS_CONCURRENT_AUDITS}
            PHPCS_MESSAGE_PROVIDER: ${PHPCS_MESSAGE_PROVIDER}
            PHPCS_STORAGE_PROVIDER: ${PHPCS_STORAGE_PROVIDER}
            PHPCS_TEMP_FOLDER: ${PHPCS_TEMP_FOLDER}
        network_mode: host

### Sync Server #################################################
    sync-server:
        image: ${GKE_SYNC_IMAGE}:latest
        volumes:
            - ./data/sync-server:/srv/data
            - ./service-account.json:/srv/service-account.json:ro
        depends_on:
            - mongo
        environment:
            API_HTTP_HOST: ${API_HTTP_HOST}
            API_PROTOCOL: ${API_PROTOCOL}
            API_VERSION: ${API_VERSION}
            AWS_API_KEY: ${AWS_API_KEY}
            AWS_API_SECRET: ${AWS_API_SECRET}
            AWS_SQS_QUEUE_LH: ${AWS_SQS_QUEUE_LH}
            AWS_SQS_QUEUE_PHPCS: ${AWS_SQS_QUEUE_PHPCS}
            AWS_SQS_REGION: ${AWS_SQS_REGION}
            AWS_SQS_VERSION: ${AWS_SQS_VERSION}
            GCF_QUEUE_LH: ${GCF_QUEUE_LH}
            GCF_QUEUE_PHPCS: ${GCF_QUEUE_PHPCS}
            GCP_PROJECT: ${GCP_PROJECT}
            GOOGLE_APPLICATION_CREDENTIALS: /srv/service-account.json
            MONGO_DATABASE_NAME: ${MONGO_DATABASE_NAME}
            MONGO_DATABASE_PASSWORD: ${MONGO_DATABASE_PASSWORD}
            MONGO_DATABASE_USERNAME: ${MONGO_DATABASE_USERNAME}
            MONGO_QUEUE_LH: ${MONGO_QUEUE_LH}
            MONGO_QUEUE_PHPCS: ${MONGO_QUEUE_PHPCS}
            SYNC_ACTIVE: ${SYNC_ACTIVE}
            SYNC_API_BROWSE_CATEGORY: ${SYNC_API_BROWSE_CATEGORY}
            SYNC_DATA: ${SYNC_DATA}
            SYNC_DATABASE_DOCUMENT_PATH: ${SYNC_DATABASE_DOCUMENT_PATH}
            SYNC_DATABASE_PROVIDER: ${SYNC_DATABASE_PROVIDER}
            SYNC_DEFAULT_CLIENT: ${SYNC_DEFAULT_CLIENT}
            SYNC_DEFAULT_VISIBILITY: ${SYNC_DEFAULT_VISIBILITY}
            SYNC_FORCE_AUDITS: ${SYNC_FORCE_AUDITS}
            SYNC_ITEMS_PER_PAGE: ${SYNC_ITEMS_PER_PAGE}
            SYNC_LH_ACTIVE: ${SYNC_LH_ACTIVE}
            SYNC_MESSAGE_PROVIDER: ${SYNC_MESSAGE_PROVIDER}
            SYNC_PHPCS_ACTIVE: ${SYNC_PHPCS_ACTIVE}
            SYNC_POOL_DELAY: ${SYNC_POOL_DELAY}
            SYNC_POOL_WORKERS: ${SYNC_POOL_WORKERS}
        network_mode: host

### Template Builder ############################################
    tpl:
        build:
            context: service/tpl
        env_file:
          - ./.env
          - ./.env.gcp
        volumes:
            - ./data/tpl:/srv/data
            - ./service/api/tpl:/srv/service/api/tpl:ro
            - ./service/lighthouse-server/kubernetes:/srv/service/lighthouse-server/kubernetes:ro
            - ./service/phpcs-server/kubernetes:/srv/service/phpcs-server/kubernetes:ro
            - ./service/sync-server/kubernetes:/srv/service/sync-server/kubernetes:ro
